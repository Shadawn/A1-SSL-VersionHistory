#Область Общее
#Если НЕ Клиент Тогда
	
	Функция МенеджерЗаписиПоСсылке(Ссылка) Экспорт 
		ИмяРегистра = ИмяРегистра(Ссылка);
		МенеджерЗаписи = РегистрыСведений[ИмяРегистра].СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Объект = ЗначениеОбъект(Ссылка, ИмяРегистра);
		Возврат МенеджерЗаписи;
	КонецФункции
	
	Функция ЗначениеОбъект(Ссылка, ИмяРегистра) Экспорт 
		Если ИмяРегистра = "А1БСПИсторияИзменений_ВерсииОбъектов" Тогда Возврат А1Э_Метаданные.ИдентификаторПоСсылке(Ссылка); КонецЕсли;
		Возврат Ссылка;
	КонецФункции
	
// Возвращает имя регистра, в котором будет храниться информация.
//
// Параметры:
//  Идентификатор	 - Ссылка,Строка,ОбъектМетаданных - в качестве строки ожидается полное имя объекта метаданных 
// 
// Возвращаемое значение:
//   - Строка 
//
	Функция ИмяРегистра(Идентификатор) Экспорт
		ОбъектМетаданных = А1Э_Метаданные.ОбъектМетаданных(Идентификатор);
		Если ОбъектМетаданных.РасширениеКонфигурации() = Неопределено Тогда
			Возврат "ВерсииОбъектов";
		Иначе
			Возврат "А1БСПИсторияИзменений_ВерсииОбъектов";
		КонецЕсли;
	КонецФункции
	
	Функция ОбработатьЗапросПоСсылке(Запрос, Ссылка, ИмяПараметра = "Ссылка") Экспорт 
		ИмяРегистра = ИмяРегистра(Ссылка);
		А1Э_Строки.Подставить(Запрос.Текст, "РегистрСведений.ВерсииОбъектов", "РегистрСведений." + ИмяРегистра);
		Запрос.УстановитьПараметр(ИмяПараметра, ЗначениеОбъект(Ссылка, ИмяРегистра));
	КонецФункции
	
#КонецЕсли
#КонецОбласти

#Область Механизм

Функция НастройкиМеханизма() Экспорт
	Настройки = А1Э_Механизмы.НовыйНастройкиМеханизма();
	
	Настройки.Обработчики.Вставить("ФормаПриСозданииОбъектов", Истина);
	Настройки.Обработчики.Вставить("ПередЗаписью", Истина);
	
	Настройки.ПорядокВыполнения = 10000000000000000;
	
	Возврат Настройки;
КонецФункции

#Если НЕ Клиент Тогда
	
	Функция ФормаПриСозданииОбъектов(Форма, Отказ, МассивОписаний) Экспорт
		ИмяРегистра = А1БСПИсторияИзменений.ИмяРегистра(Форма);
		Если НЕ ПравоДоступа("Просмотр", Метаданные.РегистрыСведений[ИмяРегистра]) Тогда Возврат Неопределено; КонецЕсли;
		Если НЕ А1Э_Общее.РавноОдномуИз(А1Э_Формы.ТипФормы(Форма), "ФормаЭлемента", "ФормаСписка") Тогда Возврат Неопределено; КонецЕсли;
		Если НЕ ВерсионированиеВключено(Форма) Тогда Возврат Неопределено; КонецЕсли;
		
		А1Э_Формы.ДобавитьОписаниеКомандыИКнопки2(МассивОписаний, "А1БСП_ИсторияИзменений_Показать", ИмяМодуля() + ".Показать", "ПоказатьИсториюИзменений", А1Э_Формы.КоманднаяПанель(Форма), , А1Э_Структуры.Создать(
		"Отображение", ОтображениеКнопки.Картинка,
		"Картинка", БиблиотекаКартинок.ИсторияДанных,
		))	
	КонецФункции
	
	Функция ПередЗаписью(Объект, Отказ, РежимЗаписи = Неопределено, РежимПроведения = Неопределено) Экспорт 
		УстановитьПривилегированныйРежим(Истина);
		Если НЕ ВерсионированиеОбъектов.ВключеноВерсионированиеОбъекта(Объект.Метаданные().ПолноеИмя()) Тогда Возврат Неопределено; КонецЕсли;
		
		Если А1Э_Метаданные.ТипМетаданных(Объект.Метаданные()) = "Документ" Тогда
			ВерсионированиеОбъектовСобытия.ЗаписатьВерсиюДокумента(Объект, Отказ, РежимЗаписи, РежимПроведения);
		Иначе
			ВерсионированиеОбъектовСобытия.ЗаписатьВерсиюОбъекта(Объект, Отказ);
		КонецЕсли;
	КонецФункции
	
	Функция ВерсионированиеВключено(Форма) Экспорт 
		ИмяМетаданных = А1Э_Формы.ИмяМетаданныхВладельцаФормы(Форма);
		УстановитьПривилегированныйРежим(Истина);
		Возврат А1Э_ПовторноеИспользование.РезультатФункции("ВерсионированиеОбъектов.ВключеноВерсионированиеОбъекта", ИмяМетаданных);
	КонецФункции
	
#КонецЕсли
#Если Клиент Тогда
	
	Функция Показать(Форма, Команда) Экспорт 
		//Передаем ссылку дважды потому что объекты из расширений не хотят передаваться в параметре типа "ЛюбаяСсылка".
		Ссылка = А1Э_Формы.ТекущаяСсылка(Форма);
		ОткрытьФорму("РегистрСведений.ВерсииОбъектов.Форма.ВыборХранимыхВерсий", А1Э_Структуры.Создать(
		"Ссылка", Ссылка,
		"Ссылка2", Ссылка,
		), , , , , , РежимОткрытияОкнаФормы.Независимый);		
	КонецФункции
	
#КонецЕсли

#КонецОбласти

Функция ИмяМодуля() Экспорт
	Возврат "А1БСПИсторияИзменений";	
КонецФункции
